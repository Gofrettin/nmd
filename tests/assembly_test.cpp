#include <gtest\gtest.h>

#define NMD_ASSEMBLY_IMPLEMENTATION
#include "nmd_assembly.h"

struct TestInstruction
{
	NMD_X86Instruction i;
	const char* s;
};

#define CPUFLAG(x) {!!((x)&(1<<0)),!!((x)&(1<<1)),!!((x)&(1<<2)),!!((x)&(1<<3)),!!((x)&(1<<4)),!!((x)&(1<<5)),!!((x)&(1<<6)),!!((x)&(1<<7)),!!((x)&(1<<8)),!!((x)&(1<<9)),!!((x)&(1<<10)),!!((x)&(1<<11)),!!((x)&(1<<13)),!!((x)&(1<<14)),!!((x)&(1<<15)),!!((x)&(1<<16)),!!((x)&(1<<17)),!!((x)&(1<<18)),!!((x)&(1<<19)),!!((x)&(1<<20)),!!((x)&(1<<21)),!!((x)&(1<<22)),!!((x)&(1<<23)),!!((x)&(1<<24)),!!((x)&(1<<25)),!!((x)&(1<<26)),!!((x)&(1<<27)),!!((x)&(1<<28)),!!((x)&(1<<29)),!!((x)&(1<<30)),!!((x)&(1<<31))}

static const NMD_X86InstructionFlags validFlags = {true, false, false, false, false, false};
static const NMD_X86InstructionFlags invalidFlags = {false, false, false, false, false, false};

static const TestInstruction instructions[] = {
	/* mnemonic         flags         fullInstruction  id                          prefixes                                modifiedFlags                                                                                                testedFlags                                     setFlags    clearedFlags                                    undefinedFlags   operands      length  opcodeMap                   encoding                             numPrefixes  opcode  opcodeSize  numOperands  rex  opcodeOffset  mode             modrm   sib  segmentOverride  group           immMask           dispMask           simdPrefix  vex  displacement  immediate  string	  
	/* int3(32)    */ {{validFlags,   {0xcc},          NMD_X86_INSTRUCTION_INT3,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(NMD_X86_EFLAGS_IF | NMD_X86_EFLAGS_NT | NMD_X86_EFLAGS_VM | NMD_X86_EFLAGS_AC | NMD_X86_EFLAGS_VIF), CPUFLAG(NMD_X86_EFLAGS_NT | NMD_X86_EFLAGS_VM), CPUFLAG(0), CPUFLAG(NMD_X86_EFLAGS_TF | NMD_X86_EFLAGS_RF), CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0xcc,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_INT,  NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "int3"    },
	/* nop(32)     */ {{validFlags,   {0x90},          NMD_X86_INSTRUCTION_NOP,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x90,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "nop"     },
	/* ret(32)     */ {{validFlags,   {0xc3},          NMD_X86_INSTRUCTION_RET,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0xc3,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_RET,  NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "ret"     },
	/* pushf(16)   */ {{validFlags,   {0x66, 0x9c},    NMD_X86_INSTRUCTION_PUSHF,  NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9c,   1,          0,           0,   1,            NMD_X86_MODE_16, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pushf"   },
	/* pushf(32)   */ {{validFlags,   {0x66, 0x9c},    NMD_X86_INSTRUCTION_PUSHF,  NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9c,   1,          0,           0,   1,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pushf"   },
	/* pushf(64)   */ {{validFlags,   {0x66, 0x9c},    NMD_X86_INSTRUCTION_PUSHF,  NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9c,   1,          0,           0,   1,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pushf"   },
	/* pushfd(32)  */ {{validFlags,   {0x9c},          NMD_X86_INSTRUCTION_PUSHFD, NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x9c,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pushfd"  },
	/* pushfq(64)  */ {{validFlags,   {0x9c},          NMD_X86_INSTRUCTION_PUSHFQ, NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x9c,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pushfq"  },
	/* popf(16)    */ {{validFlags,   {0x66, 0x9d},    NMD_X86_INSTRUCTION_POPF,   NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9d,   1,          0,           0,   1,            NMD_X86_MODE_16, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "popf"    },
	/* popf(32)    */ {{validFlags,   {0x66, 0x9d},    NMD_X86_INSTRUCTION_POPF,   NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9d,   1,          0,           0,   1,            NMD_X86_MODE_16, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "popf"    },
	/* popf(64)    */ {{validFlags,   {0x66, 0x9d},    NMD_X86_INSTRUCTION_POPF,   NMD_X86_PREFIXES_OPERAND_SIZE_OVERRIDE, CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 2,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 1,           0x9d,   1,          0,           0,   1,            NMD_X86_MODE_16, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "popf"    },
	/* retf(32)    */ {{validFlags,   {0xcb},          NMD_X86_INSTRUCTION_RETF,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0xcb,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "retf"    },
	/* leave(32)   */ {{validFlags,   {0xc9},          NMD_X86_INSTRUCTION_LEAVE,  NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0xc9,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "leave"   },
	/* int1(32)    */ {{validFlags,   {0xf1},          NMD_X86_INSTRUCTION_INT1,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0xf1,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_INT,  NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "int1"    },
	/* push es(32) */ {{validFlags,   {0x06},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x06,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push es" },
	/* push es(64) */ {{invalidFlags, {0x06},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x06,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push es" },
	/* push ss(32) */ {{validFlags,   {0x16},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x16,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push ss" },
	/* push ss(64) */ {{invalidFlags, {0x16},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x16,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push ss" },
	/* push ds(32) */ {{validFlags,   {0x1e},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x1e,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push ds" },
	/* push ds(64) */ {{invalidFlags, {0x1e},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x1e,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push ds" },
	/* push cs(32) */ {{validFlags,   {0x0e},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x0e,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push cs" },
	/* push cs(64) */ {{invalidFlags, {0x0e},          NMD_X86_INSTRUCTION_PUSH,   NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x0e,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "push cs" },
	/* pop es(32)  */ {{validFlags,   {0x07},          NMD_X86_INSTRUCTION_POP,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x07,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pop es"  },
	/* pop es(64)  */ {{validFlags,   {0x07},          NMD_X86_INSTRUCTION_POP,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x07,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pop es"  },
	/* pop ds(32)  */ {{validFlags,   {0x1f},          NMD_X86_INSTRUCTION_POP,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x1f,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pop ds"  },
	/* pop ds(64)  */ {{validFlags,   {0x1f},          NMD_X86_INSTRUCTION_POP,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x1f,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "pop ds"  },
	/* daa(32)     */ {{validFlags,   {0x27},          NMD_X86_INSTRUCTION_DAA,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x27,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "daa"     },
	/* daa(64)     */ {{validFlags,   {0x27},          NMD_X86_INSTRUCTION_DAA,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x27,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "daa"     },
	/* aaa(32)     */ {{validFlags,   {0x37},          NMD_X86_INSTRUCTION_AAA,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x37,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "aaa"     },
	/* aaa(64)     */ {{validFlags,   {0x37},          NMD_X86_INSTRUCTION_AAA,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x37,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "aaa"     },
	/* das(32)     */ {{validFlags,   {0x2f},          NMD_X86_INSTRUCTION_DAS,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x2f,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "das"     },
	/* das(64)     */ {{validFlags,   {0x2f},          NMD_X86_INSTRUCTION_DAS,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x2f,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "das"     },
	/* aas(32)     */ {{validFlags,   {0x3f},          NMD_X86_INSTRUCTION_AAS,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x3f,   1,          0,           0,   0,            NMD_X86_MODE_32, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "aas"     },
	/* aas(64)     */ {{validFlags,   {0x3f},          NMD_X86_INSTRUCTION_AAS,    NMD_X86_PREFIXES_NONE,                  CPUFLAG(0),                                                                                                  CPUFLAG(0),                                     CPUFLAG(0), CPUFLAG(0),                                     CPUFLAG(0),      {0, 0, 0, 0}, 1,      NMD_X86_OPCODE_MAP_DEFAULT, NMD_X86_INSTRUCTION_ENCODING_LEGACY, 0,           0x3f,   1,          0,           0,   0,            NMD_X86_MODE_64, {},     {},  0,               NMD_GROUP_NONE, NMD_X86_IMM_NONE, NMD_X86_DISP_NONE, 0,          0,   0,            0},        "aas"     },

};

TEST(FirstTest, TestAllInstructions)
{	
	NMD_X86Instruction instruction;
	char formattedInstruction[128];
	for (size_t i = 0; i < sizeof(instructions) / sizeof(TestInstruction); i++)
	{
		EXPECT_EQ(nmd_x86_decode_buffer(&instructions[i].i.fullInstruction, 1, &instruction, (NMD_X86_MODE)instructions[i].i.mode, NMD_X86_FEATURE_FLAGS_ALL), instructions[i].i.flags.fields.valid);
		if (instructions[i].i.flags.fields.valid)
		{
			EXPECT_EQ(memcmp(&instructions[i].i, &instruction, sizeof(NMD_X86Instruction)), 0);
			nmd_x86_format_instruction(&instruction, formattedInstruction, NMD_X86_INVALID_RUNTIME_ADDRESS, NMD_X86_FORMAT_FLAGS_DEFAULT);
			EXPECT_EQ(strcmp(formattedInstruction, instructions[i].s), 0);
		}
	}

	//const uint8_t oneByteInstructions[] = {0xcc,0x90,0xc3,0x9c,0x9d, 0xcb,0xc9,0xf1,0x06,0x16,0x1e,0x0e,0x07,0x17,0x1f,0x27,0x37,0x2f,0x3f,0xd7,0x9b,0xf4,0xf5,0x9e,0x9f,0xce,0xcf,0x98,0x99,0xd6,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd};
	//const uint16_t oneByteInstructionIds[] = {NMD_X86_INSTRUCTION_INT3, NMD_X86_INSTRUCTION_NOP, NMD_X86_INSTRUCTION_RET, NMD_X86_INSTRUCTION_PUSHF, NMD_X86_INSTRUCTION_POPF, NMD_X86_INSTRUCTION_RETF, NMD_X86_INSTRUCTION_LEAVE,NMD_X86_INSTRUCTION_INT1,NMD_X86_INSTRUCTION_PUSH,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_PUSH ,NMD_X86_INSTRUCTION_DAA,NMD_X86_INSTRUCTION_AAA,NMD_X86_INSTRUCTION_DAA,NMD_X86_INSTRUCTION_AAS ,NMD_X86_INSTRUCTION_XLAT,NMD_X86_INSTRUCTION_WAIT,NMD_X86_INSTRUCTION_HLT,NMD_X86_INSTRUCTION_CMC,NMD_X86_INSTRUCTION_SAHF,NMD_X86_INSTRUCTION_LAHF,NMD_X86_INSTRUCTION_INTO,NMD_X86_INSTRUCTION_IRET,NMD_X86_INSTRUCTION_CBW,NMD_X86_INSTRUCTION_CWD,NMD_X86_INSTRUCTION_SALC,NMD_X86_INSTRUCTION_CLC,NMD_X86_INSTRUCTION_STC,NMD_X86_INSTRUCTION_CLI,NMD_X86_INSTRUCTION_STI,NMD_X86_INSTRUCTION_CLD,NMD_X86_INSTRUCTION_STD};
	//const char* oneByteInstructionStrings[] = { "int3", "nop", "ret" };

	// Makes sure all two byte instructions are decoded correctly.
	//buffer[0] = 0x0f;
	//const uint8_t twoByteInstructions[] = { 0x05,0x06,0x07,0x08,0x09,0x0b,0x0e,0x30,0x31,0x32,0x33,0x34,0x35,0x37,0x77,0xa0,0xa1,0xa2,0xa8,0xa9,0xaa };
	//for (size_t i = 0; i < sizeof(twoByteInstructions); i++)
	//{
	//	buffer[1] = twoByteInstructions[i];
	//	EXPECT_EQ(nmd_x86_decode_buffer(buffer, 2, &instruction, NMD_X86_MODE_32, NMD_X86_FEATURE_FLAGS_MINIMAL), true);
	//	EXPECT_EQ(instruction.length, 2);
	//	EXPECT_EQ(instruction.opcodeMap, NMD_X86_OPCODE_MAP_0F);
	//	EXPECT_EQ(instruction.dispMask, NMD_X86_DISP_NONE);
	//	EXPECT_EQ(instruction.immMask, NMD_X86_IMM_NONE);
	//}
	//
	//buffer[1] = 0;
	//for (size_t i = 0; i < 5; i++)
	//{
	//	buffer[0] = i;
	//	EXPECT_EQ(nmd_x86_decode_buffer(buffer, 2, &instruction, NMD_X86_MODE_32, NMD_X86_FEATURE_FLAGS_ALL), true);
	//	EXPECT_EQ(instruction.id, NMD_X86_INSTRUCTION_ADD);
	//}
	//
	//NMD_X86_INSTRUCTION tmpInstructions[8] = { NMD_X86_INSTRUCTION_ADD, NMD_X86_INSTRUCTION_OR, NMD_X86_INSTRUCTION_ADC, NMD_X86_INSTRUCTION_SBB, NMD_X86_INSTRUCTION_AND, NMD_X86_INSTRUCTION_SUB, NMD_X86_INSTRUCTION_XOR, NMD_X86_INSTRUCTION_CMP };
	//for (size_t i = 0x80; i < 0x83; i++)
	//{
	//	buffer[0] = i;
	//
	//	for (size_t j = 0; j < 8; j++)
	//	{
	//		buffer[1] = j << 3;
	//		EXPECT_EQ(nmd_x86_decode_buffer(buffer, 2, &instruction, NMD_X86_MODE_32, NMD_X86_FEATURE_FLAGS_ALL), true);
	//		EXPECT_EQ(instruction.id, tmpInstructions[j]);
	//	}
	//}
}

int main(int argc, char** argv)
{
	::testing::InitGoogleTest(&argc, argv);
	return RUN_ALL_TESTS();
}